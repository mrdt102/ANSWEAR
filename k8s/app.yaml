apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: challenge
spec:
  selector:
    app: app
  ports:
    - name: http
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: challenge
spec:
  replicas: 1
  selector:
    matchLabels: { app: app }
  template:
    metadata:
      labels: { app: app }
    spec:
      containers:
        - name: app
          image: node:20-alpine
          command: ["sh","-lc"]
          args:
            - |
              mkdir -p /app && cd /app
              printf '%s' '{"name":"tmp","type":"module","dependencies":{"express":"^4.19.2","mysql2":"^3.11.3"}}' > package.json
              npm i --quiet
              cat > server.js <<'EOF'
              import express from 'express';
              const app = express();
              app.get('/health', (req,res)=>res.send('OK'));
              app.get('/', (req,res)=>res.send('Welcome to DevOps Challenge (K8s)!'));
              app.listen(3000, ()=>console.log('App on 3000'));
              EOF
              node server.js
          ports:
            - containerPort: 3000
          env:
            - { name: PORT, value: "3000" }
            - { name: DB_HOST, value: "mysql" }
            - { name: DB_PORT, value: "3306" }
            - { name: DB_USER, value: "root" }
            - { name: DB_PASS, value: "root" }
            - { name: DB_NAME, value: "devops-test" }
